{"version":3,"sources":["index.css","style.scss","../../styles/utils/_variable.scss","../../styles/utils/_media.scss","index.scss","stylesheet.css","utils/_main-style.scss","utils/_variable.scss","App.scss"],"names":[],"mappings":"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","file":"main.fdd79eaa.chunk.css","sourcesContent":["body {\n  margin: 0;\n  /* font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif; */\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","@import \"../../styles/utils/variable\";\n@import \"../../styles/utils/media\";\n\n.article {\n\twidth: 100%;\n\tmargin-bottom: 0;\n\t// min-height: ;\n\n\t@include media(\">query-tablet\") {\n\t\tmargin-bottom: 1em;\n\t\tborder: 1px solid $border-color;\n\t\tborder-radius: 4px;\n\t}\n\n\t@include media(\">query-desktop\") {\n\t\tmargin-bottom: 4rem;\n\t}\n\n\t// * header author\n\t&__author {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tpadding: 1em;\n\n\t\t&__avatar {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\t\t\tborder-radius: 50%;\n\t\t\toverflow: hidden;\n\t\t\t/* max-width: 2em;\n\t\t\tmax-height: 2em;\n\t\t\tmin-height: 100%;\n\t\t\twidth: 100%; */\n\t\t\tpadding: 0.14em;\n\t\t\tbackground: linear-gradient(to bottom, red, purple);\n\n\t\t\t&__image {\n\t\t\t\tmax-width: $header-avatar-size;\n\t\t\t\tmax-height: $header-avatar-size;\n\t\t\t\theight: $header-avatar-size-min;\n\t\t\t\twidth: $header-avatar-size-min;\n\t\t\t\tborder: 0.14em solid white;\n\t\t\t\tbackground-color: white;\n\t\t\t\t/* font-size: 1em; */\n\t\t\t\t/* box-sizing: border-box; */\n\t\t\t\tcolor: $font-color;\n\t\t\t\tborder-radius: 50%;\n\t\t\t}\n\t\t}\n\n\t\t&__description {\n\t\t\tdisplay: flex;\n\t\t\tflex: 1;\n\t\t\tmargin-left: 14px;\n\n\t\t\t&__name {\n\t\t\t\t/* background-color: aqua; */\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t}\n\t\t\t&__name__name {\n\t\t\t\tcolor: $font-color;\n\t\t\t\tdisplay: block;\n\t\t\t\tfont-size: 0.9em;\n\t\t\t\tfont-weight: 500;\n\t\t\t\ttext-decoration: none;\n\t\t\t}\n\t\t\t&__name__location {\n\t\t\t\tcolor: $font-color;\n\t\t\t\tmargin-top: 0.2em;\n\t\t\t\ttext-decoration: none;\n\t\t\t\tdisplay: block;\n\t\t\t\tfont-size: 0.8em;\n\t\t\t}\n\t\t\t&__option {\n\t\t\t\tmargin: auto 0;\n\t\t\t\tmargin-left: auto;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * Article images\n.article__images__container {\n\tmax-width: $image-article-size;\n\tmax-height: $image-article-size;\n\tmin-width: $image-article-size-min;\n\tmin-height: $image-article-size-min;\n\n\t&__image {\n\t\tmin-width: 100%;\n\t\tmin-height: 100%;\n\t\t// object-fit: contain;\n\t\tobject-fit: contain;\n\t\t\n\t\t@include media(\">query-phone\") {\n\t\t\tobject-fit: cover;\n\t\t}\n\t}\n}\n\n.article__images__carousel {\n\t// * Coursel images\n\t.carousel-dots {\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tmargin: 0;\n\n\t\t& > li {\n\t\t\twidth: 0.5em;\n\t\t\theight: 0.5em;\n\t\t}\n\t\t& > li > button {\n\t\t\tposition: relative;\n\t\t\twidth: inherit;\n\t\t\theight: inherit;\n\t\t}\n\t\t& > li > button::before {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\ttop: 0;\n\t\t\tleft: 0;\n\t\t\twidth: inherit;\n\t\t\theight: inherit;\n\t\t\tbackground-color: black;\n\t\t\tborder-radius: 50%;\n\t\t}\n\t}\n\n\t// * Coursel arrow\n\t.carousel-arrow-container {\n\t\tbackground-color: transparent;\n\t\tposition: absolute;\n\t\t/* left: 0; */\n\t\ttop: 0;\n\t\tpadding: 0 0.8em;\n\t\tz-index: 4;\n\t\t/* color: transparent; */\n\t\t/* width: 10%; */\n\t\theight: 100%;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tborder: none;\n\t\toutline: none;\n\t\ttransition: all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n\t}\n\t.carousel-arrow-prev {\n\t\tleft: 0;\n\t}\n\t.carousel-arrow-next {\n\t\tright: 0;\n\t}\n\t.carousel-arrow-button {\n\t\tbackground-color: transparent;\n\t\tpadding: 0;\n\t\tborder: none;\n\t\toutline: none;\n\t\tz-index: 5;\n\t}\n\t.carousel-arrow-icon {\n\t\tcursor: pointer;\n\t\tbackground-color: whitesmoke;\n\t\tborder-radius: 50%;\n\t\tcolor: rgb(119, 119, 119);\n\t\tz-index: 6;\n\t\tpadding: 0;\n\t}\n}\n\n// * Action bar\n.article__actionBar {\n\tpadding: 0 0.5em;\n\t// margin-top: -1.2em;\n\t/* background-color: cyan; */\n\tdisplay: flex;\n\talign-items: center;\n\n\t&__icon__container {\n\t}\n\t&__icon__container__button {\n\t\tpadding: 0.5em;\n\t\tbackground-color: transparent;\n\t\tborder: none;\n\t\toutline: none;\n\t}\n\t&__icon__container__button__icon {\n\t\tcursor: pointer;\n\t\t/* outline-width: .1em; */\n\t}\n\n\t// * Icon\n\t.send__icon {\n\t\ttransform: rotate(-45deg) translate(0.2em, -0.4em);\n\t}\n\t.bookmark__icon {\n\t\tmargin-left: auto;\n\t}\n}\n\n// * Description\n.article__description {\n\tpadding: 0 1em;\n\tfont-size: 0.875em;\n\n\ta {\n\t\ttext-decoration: none;\n\t\tcolor: $font-color;\n\t\tfont-weight: 500;\n\t\tfont-size: 1em;\n\t}\n\n\t// * more button\n\t.moreButton {\n\t\tdisplay: inline-block;\n\n\t\t& button {\n\t\t\tcolor: rgb(142, 142, 142);\n\t\t\t// padding: 0;\n\t\t\tmargin: 0;\n\t\t\tbackground-color: white;\n\t\t\tborder: none;\n\t\t\toutline: none;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\n\t// * hashtag\n\t.hashtag {\n\t\tcolor: $font-color-link;\n\t\tfont-weight: normal;\n\n\t\t&::after {\n\t\t\tcontent: \" \";\n\t\t\twhite-space: pre;\n\t\t}\n\t}\n\n\t// * username\n\t.username {\n\t\tdisplay: inline-block;\n\n\t\t&::after {\n\t\t\tcontent: \" \";\n\t\t\twhite-space: pre;\n\t\t}\n\t}\n\n\t// * comment\n\t.comment {\n\t\tline-height: 1.2em;\n\t\tmargin-bottom: 0.25em;\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\t&__section {\n\t\t\t//\n\t\t\tmargin-right: auto;\n\t\t}\n\n\t\tbutton {\n\t\t\t@extend .moreButton;\n\t\t\tpadding: 0 0;\n\t\t\tmargin-left: auto;\n\t\t}\n\t}\n\n\t// * caption section\n\t&__caption {\n\t\tline-height: 1.2em;\n\t\tmargin-bottom: 0.25em;\n\n\t\t&__loveCount {\n\t\t\tdisplay: block;\n\t\t\tmargin-bottom: 0.5em;\n\t\t}\n\t}\n\n\t// * comment section\n\t&__comment {\n\t\tline-height: 1.2em;\n\n\t\t&__viewAll {\n\t\t\tdisplay: block;\n\t\t\tmargin-bottom: 0.25em;\n\t\t\ta {\n\t\t\t\tcolor: $font-color-grey;\n\t\t\t\tfont-weight: normal;\n\t\t\t}\n\t\t}\n\t\t&__list {\n\t\t}\n\n\t\t&__createdAt {\n\t\t\tmargin-bottom: 1em;\n\n\t\t\ta {\n\t\t\t\tcolor: $font-color-grey;\n\t\t\t\tfont-weight: normal;\n\t\t\t\tfont-size: 0.9em;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// * Add comment\n.article__comment__form {\n\tdisplay: none;\n\n\t@include media(\">query-tablet\") {\n\t\tdisplay: flex;\n\t\talign-items: stretch;\n\t\tpadding: 1em;\n\t\tborder-top: 1px solid $border-color;\n\t}\n\n\t& form {\n\t\twidth: 100%;\n\t}\n\n\t&__inputGroup {\n\t\twidth: 100%;\n\n\t\t& input {\n\t\t\tborder: none;\n\t\t\tpadding: 0.2em 0;\n\t\t\tdisplay: inline-block;\n\t\t\tbackground-color: transparent;\n\t\t\toutline: none;\n\t\t\twidth: 90%;\n\t\t}\n\n\t\t& button {\n\t\t\tpadding: 0;\n\t\t\tborder: none;\n\t\t\toutline: none;\n\t\t\tfont-weight: 600;\n\t\t\tdisplay: inline-block;\n\t\t\tcolor: rgb(0, 149, 246);\n\t\t\tbackground-color: transparent;\n\t\t\tmargin-left: auto;\n\t\t\tcursor: pointer;\n\t\t\twidth: 10%;\n\t\t}\n\t}\n}\n","// font\n$font-size: 16px;\n$font-family: \"Rubik\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n\tOxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n\n// color\n$border-color: rgba(184, 184, 184, 0.575);\n$font-color: rgba(38, 38, 38, 1);\n$font-color-grey: rgb(142, 142, 142);\n$font-color-link: rgb(0, 55, 107);\n$font-color-link-lighter: rgb(0, 149, 246);\n\n// media query\n$media-large-desktop: 1000px;\n$media-desktop: 735px;\n$media-tablet: 640px;\n$media-phone: 500px;\n\n// ======\n\n/* article page */\n/* Header */\n$header-avatar-size: 2em;\n$header-avatar-size-min: 2em;\n/* image */\n$image-article-size: 38.375em;\n$image-article-size-min: 18.75em;\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px,\n  'query-large-desktop': 1000px, \n\t'query-desktop': 735px,\n\t'query-tablet': 640px,\n\t'query-phone': 500px,\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","@use '../../utils/style';\n\n.aside {\n\t&__profile {\n\t\tdisplay: flex;\n\t\tmargin: 1.1em 0 1.2em;\n\n\t\t&__avatar {\n\t\t\tobject-fit: contain;\n\t\t\tborder-radius: 50%;\n\t\t\theight: 3.5em;\n\t\t\twidth: 3.5em;\n\t\t}\n\n\t\t&__description {\n\t\t\tmargin-left: 1.5em;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: column;\n\t\t\tjustify-content: center;\n\t\t\t// align-items: center;\n\t\t\tfont-size: 0.87em;\n\n\t\t\t&__username {\n\t\t\t\tfont-weight: 500;\n\t\t\t\tmargin-bottom: 0.2em;\n\t\t\t}\n\n\t\t\t&__name {\n\t\t\t\tcolor: var(--font-color-grey);\n\t\t\t}\n\t\t}\n\t}\n\n\t&__suggestion {\n\t\tmargin-bottom: 0.8em;\n\t\t&__header {\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-between;\n\t\t\t// margin-bottom: 0.5em;\n\n\t\t\tspan {\n\t\t\t\tcolor: var(--font-color-grey);\n\t\t\t\tfont-weight: 600;\n\t\t\t\tfont-size: 0.9em;\n\t\t\t}\n\t\t}\n\n\t\t&__list {\n\t\t\tpadding: 0.5em 0;\n\t\t\t&__item {\n\t\t\t\tdisplay: flex;\n\t\t\t\tpadding: 0.5em 0;\n\t\t\t\t&__avatar {\n\t\t\t\t\t@extend .aside__profile__avatar;\n\t\t\t\t\theight: 2em;\n\t\t\t\t\twidth: 2em;\n\t\t\t\t}\n\n\t\t\t\t&__description {\n\t\t\t\t\t@extend .aside__profile__description;\n\t\t\t\t\tflex-grow: 1;\n\t\t\t\t\tmargin-left: 0.5em;\n\n\t\t\t\t\tspan {\n\t\t\t\t\t\tfont-size: 0.85em;\n\t\t\t\t\t\tcolor: var(--font-color-grey);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t&__follow {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\tmargin-left: auto;\n\t\t\t\t\tcolor: var(--link-color-lighter);\n\t\t\t\t\tfont-size: 0.8em;\n\t\t\t\t\tfont-weight: 600;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t&__footer {\n\t\t&__nav {\n\t\t\tdisplay: flex;\n\t\t\tflex-wrap: wrap;\n\t\t\twidth: 90%;\n\t\t\tmargin-bottom: 1em;\n\t\t\ta {\n\t\t\t\tfont-size: 0.7em;\n\t\t\t\tcolor: var(--font-color-grey);\n\t\t\t\tmargin-right: 0.4em;\n\t\t\t\tmargin-bottom: 0.4em;\n\t\t\t}\n\t\t}\n\n\t\t&__copyright {\n\t\t\tfont-size: 0.7em;\n\t\t\tcolor: var(--font-color-grey);\n\t\t\ttext-transform: uppercase;\n\t\t}\n\t}\n}\n","@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-Regular.woff2') format('woff2'),\n        url('Rubik-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-BoldItalic.woff2') format('woff2'),\n        url('Rubik-BoldItalic.woff') format('woff');\n    font-weight: bold;\n    font-style: italic;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-Black.woff2') format('woff2'),\n        url('Rubik-Black.woff') format('woff');\n    font-weight: 900;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-Bold.woff2') format('woff2'),\n        url('Rubik-Bold.woff') format('woff');\n    font-weight: bold;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-MediumItalic.woff2') format('woff2'),\n        url('Rubik-MediumItalic.woff') format('woff');\n    font-weight: 500;\n    font-style: italic;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-Medium.woff2') format('woff2'),\n        url('Rubik-Medium.woff') format('woff');\n    font-weight: 500;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-Italic.woff2') format('woff2'),\n        url('Rubik-Italic.woff') format('woff');\n    font-weight: normal;\n    font-style: italic;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-LightItalic.woff2') format('woff2'),\n        url('Rubik-LightItalic.woff') format('woff');\n    font-weight: 300;\n    font-style: italic;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-Light.woff2') format('woff2'),\n        url('Rubik-Light.woff') format('woff');\n    font-weight: 300;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Rubik';\n    src: url('Rubik-BlackItalic.woff2') format('woff2'),\n        url('Rubik-BlackItalic.woff') format('woff');\n    font-weight: 900;\n    font-style: italic;\n    font-display: swap;\n}\n\n","a {\n\ttext-decoration: none;\n\tcolor: $font-color-link-lighter;\n\tfont-weight: normal;\n\tfont-size: 1em;\n}","// font\n$font-size: 16px;\n$font-family: \"Rubik\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n\tOxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n\n// color\n$border-color: rgba(184, 184, 184, 0.575);\n$font-color: rgba(38, 38, 38, 1);\n$font-color-grey: rgb(142, 142, 142);\n$font-color-link: rgb(0, 55, 107);\n$font-color-link-lighter: rgb(0, 149, 246);\n\n// media query\n$media-large-desktop: 1000px;\n$media-desktop: 735px;\n$media-tablet: 640px;\n$media-phone: 500px;\n\n// ======\n\n/* article page */\n/* Header */\n$header-avatar-size: 2em;\n$header-avatar-size-min: 2em;\n/* image */\n$image-article-size: 38.375em;\n$image-article-size-min: 18.75em;\n","@import \"../assets/fonts/stylesheet.css\";\n\n@import './utils//variable';\n@import 'utils/main-style';\n\n.body {\n\tposition: relative;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tbackground-color: rgba(250, 250, 250, 1);\n\n\t&__main {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 100%;\n\t\tpadding: 6em 0;\n\t\tmax-width: 935px;\n\t\tbox-sizing: border-box;\n\t\t\n\t}\n\n}\n\n:root {\n\n\tfont-size: $font-size;\n\tfont-family: $font-family;\n}\n"]}